<template>
	<view class="content b-t">
		<view class="list b-b" v-for="(item, index) in addressList" :key="index" @click="checkAddress(item)">
			<view class="wrapper">
				<view class="address-box">
					<text v-if="item.default" class="tag">默认</text>
					<text class="address">{{item.provinceName}} {{item.cityName}} {{item.countyName}} {{item.addressDetail}}  {{item.area}} </text>
					<text class="address" hidden="true" >{{item.id}}</text>
					<text class="address" hidden="true" >{{item.province}}</text>
					<text class="address" hidden="true" >{{item.city}}</text>
					<text class="address" hidden="true" >{{item.county}}</text>
				</view>
				<view class="u-box">
					<text class="name">{{item.name}}</text>
					<text class="mobile">{{item.tel}}</text>
				</view>
			</view>
			<text class="yticon icon-bianji" @click.stop="addAddress('edit', item)"></text>
			<view class="delete" @click.stop="deletes(index,item.id)"></view>
		</view>
		<!-- <text style="display:block;padding: 16upx 30upx 10upx;lihe-height: 1.6;color: #fa436a;font-size: 24upx;">
			重要：添加和修改地址回调仅增加了一条数据做演示，实际开发中将回调改为请求后端接口刷新一下列表即可
		</text> -->
		
		<button class="add-btn" @click="addAddress('add')">新增地址</button>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				source: 0,
				addressList: [
					
					// {	
					// 	name: 'name1',
					// 	tel: '123456',
					// 	addressDetail: '北京北京',
					// 	address: '北京',
					// 	area: '通州',
					// 	default: true,
					// 	provinceName:"北京省",
					// 	cityName:"北京市",
					// 	countyName:"北京哈",
					// 	id:"12",
					// 	province:"北京再来一个",
					// 	city:"北京city",
					// 	county:"北京county"
					// }
					
				]
			} 
		},
		onLoad(option){
			console.log(option.source);
			this.source = option.source;
			 this.getImg() ;
		},
		methods: {
			//选择地址
			checkAddress(item){
				if(this.source == 1){
					//this.$api.prePage()获取上一页实例，在App.vue定义
					this.$api.prePage().addressData = item;
					uni.navigateBack()
				}
			},
			addAddress(type, item){
				uni.navigateTo({
					url: `/pages/address/addressManage?type=${type}&data=${JSON.stringify(item)}`
				})
			},
			//添加或修改成功之后回调
			refreshList(data, type){
				//添加或修改后事件，这里直接在最前面添加了一条数据，实际应用中直接刷新地址列表即可
				this.addressList.unshift(data);
				
				console.log(data, type);
			},
			getImg: function(){
				
			
			  var that = this;    
	 
			
			 
			that.$http({           //调用接口
				    method:'GET',
					
				    url:this.global.target+"wx/address/list?userId="+uni.getStorageSync('userInfo').id
				}).then(function(response){ //接口返回数据
				
				that.addressList=response.data.data;             
				//alert(response.data.errmsg);
			  },function(error){
	 
			  }) 

	 
			/*  that.$http({      //调用接口
	 
				method:'GET',
	 
				url:that.global.target+ "wx/address/list?userId="+uni.getStorageSync('userInfo').id,
	 
			  }).then(function(response){ //接口返回数据
				
				that.addressList=response.data;             
				alert(response.data.errmsg);
			  },function(error){
	 
			  }) */
 
			},
			deletes:function(index,id){//删除地址
			var that= this;
			
			uni.showModal({
				content: '确定要删除此地址么？',
				success: (confirmRes)=> {
					if (confirmRes.confirm) {
						that.$http({ //调用接口
							method: 'POST',
							data: "",
							url: this.global.target + "/wx/address/delete?userId="+uni.getStorageSync('userInfo').id+"&id="+id
						}).then(function(response) { //接口返回数据
							const result = response.data.errno;
							
							if(result==0){
								
								that.addressList.splice(index,1)
								that.$api.msg(`地址删除成功`);
							}else{
								that.$api.msg(`地址删除失败`+response.errmsg);
							}
						
						
						}, function(error) {})
						
						
					} 
				}
			});
			
			
				
			}
		}
	}
</script>

<style lang='scss'>
	page{
		padding-bottom: 120upx;
	}
	.content{
		position: relative;
	}
	.list{
		display: flex;
		align-items: center;
		padding: 20upx 18upx;
		background: #fff;
		position: relative;
	}
	.wrapper{
		display: flex;
		flex-direction: column;
		flex: 1;
	}
	.address-box{
		display: flex;
		align-items: center;
		.tag{
			font-size: 24upx;
			color: $base-color;
			margin-right: 10upx;
			background: #fffafb;
			border: 1px solid #ffb4c7;
			border-radius: 4upx;
			padding: 4upx 10upx;
			line-height: 1;
		}
		.address{
			font-size: 30upx;
			color: $font-color-dark;
		}
	}
	.u-box{
		font-size: 28upx;
		color: $font-color-light;
		margin-top: 16upx;
		.name{
			margin-right: 30upx;
		}
	}
	.icon-bianji{
		display: flex;
		align-items: center;
		height: 80upx;
		font-size: 40upx;
		color: $font-color-light;
		padding-left: 30upx;
	}
	
	.add-btn{
		position: fixed;
		left: 30upx;
		right: 30upx;
		bottom: 16upx;
		z-index: 95;
		display: flex;
		align-items: center;
		justify-content: center;
		width: 690upx;
		height: 80upx;
		font-size: 32upx;
		color: #fff;
		background-color: $base-color;
		border-radius: 10upx;
		box-shadow: 1px 2px 5px rgba(219, 63, 96, 0.4);		
	}
	.delete{
		width: 44upx;
		height: 44upx;
		background: url('../../static/a_delete.png');
		background-size: 100% 100%;
		margin: 0 0 0 10upx;
	}
</style>
